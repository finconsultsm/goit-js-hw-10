{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    onDateTimePickerChange(selectedDates);\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nconst startBtn = document.querySelector('button[data-start]');\nconst daysRef = document.querySelector('span[data-days]');\nconst hoursRef = document.querySelector('span[data-hours]');\nconst minsRef = document.querySelector('span[data-minutes]');\nconst secsRef = document.querySelector('span[data-seconds]');\n\nstartBtn.disabled = true;\n\nfunction onDateTimePickerChange(selectedDates) {\n  if (selectedDates[0] < new Date()) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Please choose a date in the future',\n      position: 'topRight',\n    });\n    startBtn.disabled = true;\n    return;\n  }\n\n  startBtn.disabled = false;\n\n  userSelectedDate = selectedDates[0];\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  startTimer();\n});\n\nfunction startTimer() {\n  const targetDate = userSelectedDate.getTime();\n\n  const timerId = setInterval(() => {\n    const currentDate = Date.now();\n    const time = targetDate - currentDate;\n\n    if (time <= 0) {\n      clearInterval(timerId);\n      return;\n    }\n\n    const { days, hours, minutes, seconds } = convertMs(time);\n\n    daysRef.textContent = days.toString().padStart(2, '0');\n    hoursRef.textContent = hours.toString().padStart(2, '0');\n    minsRef.textContent = minutes.toString().padStart(2, '0');\n    secsRef.textContent = seconds.toString().padStart(2, '0');\n  }, 1000);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n\n  const hours = Math.floor((ms % day) / hour);\n\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["userSelectedDate","options","selectedDates","onDateTimePickerChange","flatpickr","startBtn","daysRef","hoursRef","minsRef","secsRef","iziToast","startTimer","targetDate","timerId","currentDate","time","days","hours","minutes","seconds","convertMs","ms"],"mappings":"2GAKA,IAAIA,EAAmB,KAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAuBD,CAAa,CACrC,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAErC,MAAMI,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAU,SAAS,cAAc,iBAAiB,EAClDC,EAAW,SAAS,cAAc,kBAAkB,EACpDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3DJ,EAAS,SAAW,GAEpB,SAASF,EAAuBD,EAAe,CAC7C,GAAIA,EAAc,CAAC,EAAI,IAAI,KAAQ,CACjCQ,EAAS,MAAM,CACb,MAAO,QACP,QAAS,qCACT,SAAU,UAChB,CAAK,EACDL,EAAS,SAAW,GACpB,MACD,CAEDA,EAAS,SAAW,GAEpBL,EAAmBE,EAAc,CAAC,CACpC,CAEAG,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBM,GACF,CAAC,EAED,SAASA,GAAa,CACpB,MAAMC,EAAaZ,EAAiB,UAE9Ba,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAc,KAAK,MACnBC,EAAOH,EAAaE,EAE1B,GAAIC,GAAQ,EAAG,CACb,cAAcF,CAAO,EACrB,MACD,CAED,KAAM,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAI,EAExDT,EAAQ,YAAcU,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACrDT,EAAS,YAAcU,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACvDT,EAAQ,YAAcU,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EACxDT,EAAQ,YAAcU,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CACzD,EAAE,GAAI,CACT,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}